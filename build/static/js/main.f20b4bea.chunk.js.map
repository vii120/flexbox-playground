{"version":3,"sources":["Components/RadioBtn.js","Components/Flexbox.js","Components/ItemSelector.js","Components/Flexitem.js","Main.js","serviceWorker.js","index.js"],"names":["RadioBtn","props","this","list","value","onChange","name","className","length","map","item","key","htmlFor","type","id","checked","text","Component","Flexbox","classList","join","Array","apply","ItemSelector","params","setItemVal","asList","fbList","number","grow","shrink","basis","order","self","NumberBox","attr","data","onClick","e","target","Flexitem","itemVal","setStyle","setClass","classArr","class","push","style","MainPage","setConVal","val","newVal","state","containerVal","Number","setState","index","convertList","dirVal","wrapVal","jcVal","aiVal","acVal","Object","keys","reduce","pre","el","attrList","concat","initCon","preventDefault","initItems","dirList","wrapList","jcList","aiList","acList","radioContent","title","btnName","valName","role","Boolean","window","location","hostname","match","ReactDOM","render","Main","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f20b4bea.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass RadioBtn extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        const { list, value, onChange, name } = this.props\r\n        return (\r\n            <div className=\"radioBox\">\r\n                {!!list.length && list.map((item, key) =>\r\n                    <label htmlFor={`${name}_${key}`} key={key}\r\n                        className={key === value ? 'checked' : ''}>\r\n                        <input\r\n                            type=\"radio\"\r\n                            name={name}\r\n                            id={`${name}_${key}`}\r\n                            value={key}\r\n                            checked={key === value}\r\n                            onChange={onChange}\r\n                        />\r\n                        {item.text}\r\n                    </label>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RadioBtn;","import React, { Component } from 'react';\r\n\r\nclass Flexbox extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        const { classList } = this.props;\r\n        return (\r\n            <div className={`boxWrapper d-flex ${classList.join(' ')}`}>\r\n                {Array.apply(null, Array(10)).map((item, key) =>\r\n                    <div className=\"boxItem\" key={key}>{key+1}</div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Flexbox;","import React, { Component } from 'react';\r\n\r\nclass ItemSelector extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        const { params, setItemVal, asList, fbList, number } = this.props\r\n        const { grow, shrink, basis, order, self } = params\r\n        const NumberBox = (attr, data) => (\r\n            <div className=\"numberBox\">\r\n                <div className=\"roundBtn minusBtn\" onClick={() => setItemVal(attr, data - 1)}>-</div>\r\n                <div className=\"number\">{data}</div>\r\n                <div className=\"roundBtn plusBtn\" onClick={() => setItemVal(attr, data + 1)}>+</div>\r\n            </div>\r\n        )\r\n        return (\r\n            <div className=\"selector\">\r\n                <div className=\"text-center font-weight-bold\">{number}</div>\r\n                <div className=\"selRow\">\r\n                    <span className=\"selTitle\">flex-grow</span>\r\n                    {NumberBox('grow', grow)}\r\n                </div>\r\n                <div className=\"selRow\">\r\n                    <span className=\"selTitle\">flex-shrink</span>\r\n                    {NumberBox('shrink', shrink)}\r\n                </div>\r\n                <div className=\"selRow\">\r\n                    <span className=\"selTitle\">flex-basis</span>\r\n                    <select value={basis} onChange={(e) => setItemVal('basis', e.target.value)}>\r\n                        {fbList.map((item, key) => <option value={key} key={key}>{item.text}</option>)}\r\n                    </select>\r\n                </div>\r\n                <div className=\"selRow\">\r\n                    <span className=\"selTitle\">order</span>\r\n                    {NumberBox('order', order)}\r\n                </div>\r\n                <div className=\"selRow\">\r\n                    <span className=\"selTitle\">align-self</span>\r\n                    <select value={self} onChange={(e) => setItemVal('self', e.target.value)}>\r\n                        {asList.map((item, key) => <option value={key} key={key}>{item.text}</option>)}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ItemSelector;","import React, { Component } from 'react';\r\n\r\nclass Flexitem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        const { itemVal, asList, fbList } = this.props\r\n        const setStyle = (item) => {\r\n            const { grow, shrink, order } = item\r\n            const style = {\r\n                'flexGrow': grow,\r\n                'flexShrink': shrink,\r\n                order\r\n            }\r\n            return style\r\n        }\r\n        const setClass = (item) => {\r\n            const { basis, self } = item\r\n            const classArr = ['itemSelf']\r\n            if (fbList[basis] && fbList[basis].class) {\r\n                classArr.push(fbList[basis].class)\r\n            }\r\n            if (asList[self] && asList[self].class) {\r\n                classArr.push(asList[self].class)\r\n            }\r\n            // console.log(basis, self);\r\n            return classArr.join(' ')\r\n        }\r\n        return (\r\n            <div className=\"itemWrapper d-flex flex-wrap\">\r\n                {itemVal.map((item, key) =>\r\n                    <div key={key}\r\n                        className={setClass(item)}\r\n                        style={setStyle(item)}\r\n                    >{key + 1}</div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Flexitem;","import React, { Component } from 'react';\r\nimport { RadioBtn, Flexbox, ItemSelector, Flexitem } from './Components'\r\n\r\nclass MainPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            // 各個屬性的所有值\r\n            dirList: [\r\n                { text: 'row', class: '' },\r\n                { text: 'column', class: 'flex-column' },\r\n                { text: 'row-reverse', class: 'flex-row-reverse' },\r\n                { text: 'column-reverse', class: 'flex-column-reverse' }],\r\n            wrapList: [\r\n                { text: 'nowrap', class: '' },\r\n                { text: 'wrap', class: 'flex-wrap' },\r\n                { text: 'wrap-reverse', class: 'flex-wrap-reverse' }],\r\n            jcList: [\r\n                { text: 'flex-start', class: '' },\r\n                { text: 'flex-end', class: 'justify-content-end' },\r\n                { text: 'center', class: 'justify-content-center' },\r\n                { text: 'space-between', class: 'justify-content-between' },\r\n                { text: 'space-around', class: 'justify-content-around' }],\r\n            aiList: [\r\n                { text: 'flex-start', class: '' },\r\n                { text: 'flex-end', class: 'align-items-end' },\r\n                { text: 'center', class: 'align-items-center' },\r\n                { text: 'baseline', class: 'align-items-baseline' },\r\n                { text: 'stretch', class: 'align-items-stretch' }],\r\n            acList: [\r\n                { text: 'flex-start', class: '' },\r\n                { text: 'flex-end', class: 'align-content-end' },\r\n                { text: 'center', class: 'align-content-center' },\r\n                { text: 'space-between', class: 'align-content-between' },\r\n                { text: 'space-around', class: 'align-content-around' },\r\n                { text: 'stretch', class: 'align-content-stretch' }],\r\n            // flex container 當前屬性值\r\n            containerVal: {\r\n                dirVal: 0,      // flex-direction\r\n                wrapVal: 0,     // flex-wrap\r\n                jcVal: 0,       // justify-content\r\n                aiVal: 0,       // align-items\r\n                acVal: 0,       // align-content\r\n            },\r\n            // flex items 當前屬性值\r\n            itemVal: [\r\n                { grow: 0, shrink: 1, basis: 0, order: 0, self: 0 },\r\n                { grow: 0, shrink: 1, basis: 0, order: 0, self: 0 },\r\n                { grow: 0, shrink: 1, basis: 0, order: 0, self: 0 },\r\n                { grow: 0, shrink: 1, basis: 0, order: 0, self: 0 },\r\n                { grow: 0, shrink: 1, basis: 0, order: 0, self: 0 }],\r\n            asList: [\r\n                { text: 'auto', class: '' },\r\n                { text: 'flex-start', class: 'align-self-start' },\r\n                { text: 'flex-end', class: 'align-self-end' },\r\n                { text: 'center', class: 'align-self-center' },\r\n                { text: 'baseline', class: 'align-self-baseline' },\r\n                { text: 'stretch', class: 'align-self-stretch' }],\r\n            fbList: [\r\n                { text: 'auto', class: '' },\r\n                { text: '0px', class: 'flex-basis-0' },\r\n                { text: '100px', class: 'flex-basis-px' },\r\n                { text: '50%', class: 'flex-basis-percent' },\r\n            ]\r\n        }\r\n    }\r\n    // 改變 container 屬性\r\n    setConVal = (attr, val) => {\r\n        const newVal = { ...this.state.containerVal }\r\n        newVal[attr] = Number(val)\r\n        this.setState({ containerVal: newVal });\r\n    }\r\n    // 改變 item 屬性\r\n    setItemVal = (index, attr, val) => {\r\n        const newVal = this.state.itemVal.map(item => ({ ...item }))\r\n        newVal[index][attr] = Number(val)\r\n        this.setState({ itemVal: newVal });\r\n    }\r\n    // 將 container 屬性轉成 class 名稱\r\n    setClass = () => {\r\n        const { containerVal } = this.state\r\n        // 屬性值與列表的名稱對照\r\n        const convertList = {\r\n            dirVal: 'dirList',\r\n            wrapVal: 'wrapList',\r\n            jcVal: 'jcList',\r\n            aiVal: 'aiList',\r\n            acVal: 'acList',\r\n        }\r\n        const classList = Object.keys(containerVal).reduce((pre, el) => {\r\n            if (!!containerVal[el] && convertList[el]) {\r\n                const attrList = this.state[convertList[el]]\r\n                return pre.concat(attrList[containerVal[el]].class)\r\n            } else return pre\r\n        }, [])\r\n        return classList\r\n    }\r\n    // 初始化 container 所有值\r\n    initCon = (e) => {\r\n        if (e) { e.preventDefault() }\r\n        const newVal = { ...this.state.containerVal }\r\n        Object.keys(newVal).map(item => newVal[item] = 0)\r\n        this.setState({ containerVal: newVal });\r\n    }\r\n    // 初始化 items 所有值\r\n    initItems = (e) => {\r\n        if (e) { e.preventDefault() }\r\n        const newVal = Array.apply(null, Array(5)).map(item => (\r\n            { grow: 0, shrink: 1, basis: 0, order: 0, self: 0 }\r\n        ))\r\n        this.setState({ itemVal: newVal });\r\n    }\r\n    render() {\r\n        const {\r\n            containerVal,\r\n            dirList,\r\n            wrapList,\r\n            jcList,\r\n            aiList,\r\n            acList,\r\n            itemVal,\r\n            asList,\r\n            fbList,\r\n        } = this.state\r\n        const radioContent = (title, btnName, list, valName) => (\r\n            <div className=\"mb-2 row align-items-center\">\r\n                <span className=\"col-lg-2 mb-lg-0 mb-1 font-weight-bold\">{title}</span>\r\n                <div className=\"col-lg-10\">\r\n                    <RadioBtn name={btnName}\r\n                        list={list}\r\n                        value={containerVal[valName]}\r\n                        onChange={e => this.setConVal(valName, e.target.value)}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n        return (\r\n            <div className=\"container pt-2 pb-5\">\r\n                <h1 className=\"text-center mb-4\">Flexbox Playground</h1>\r\n                <h3 className=\"my-4\"><span role=\"img\">🧀</span> flex container\r\n                    <button className=\"btn btn-sm btn-outline-danger ml-4\" onClick={this.initCon}>reset!</button>\r\n                </h3>\r\n                {radioContent('flex-direction', 'dirBtn', dirList, 'dirVal')}\r\n                {radioContent('flex-wrap', 'wrapBtn', wrapList, 'wrapVal')}\r\n                {radioContent('justify-content', 'jcBtn', jcList, 'jcVal')}\r\n                {radioContent('align-items', 'aiBtn', aiList, 'aiVal')}\r\n                {radioContent('align-content', 'acBtn', acList, 'acVal')}\r\n                {!!containerVal.acVal && !containerVal.wrapVal &&\r\n                    <div className=\"text-danger\">* ALIGN-CONTENT need to use with WRAP!!</div>}\r\n                <Flexbox classList={this.setClass()} />\r\n                <h3 className=\"my-4\"><span role=\"img\">🧀</span> flex items\r\n                    <button className=\"btn btn-sm btn-outline-danger ml-4\" onClick={this.initItems}>reset!</button>\r\n                </h3>\r\n                <div className=\"selectorWrapper\">\r\n                    {Array.apply(null, Array(5)).map((item, key) =>\r\n                        <ItemSelector\r\n                            key={key}\r\n                            number={key + 1}\r\n                            params={itemVal[key]}\r\n                            asList={asList}\r\n                            fbList={fbList}\r\n                            setItemVal={(attr, val) => this.setItemVal(key, attr, val)} />\r\n                    )}\r\n                </div>\r\n                <Flexitem itemVal={itemVal} asList={asList} fbList={fbList} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MainPage;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Main from './Main';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './styles/custom.scss'\r\n\r\nReactDOM.render(<Main />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}